name: Hardhat Build, Test and Slither Analysis

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-test-analyze:
    runs-on: ubuntu-latest
    
    steps:
      # Check out repository code
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      # Install dependencies
      - name: Install dependencies
        run: npm ci
      
      # Compile Hardhat project
      - name: Compile smart contracts
        run: npx hardhat compile
      
      # Run tests
      - name: Run Hardhat tests
        run: npx hardhat test
      
      # Setup Python for Slither
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      # Install Slither
      - name: Install Slither
        run: |
          python -m pip install --upgrade pip
          pip install slither-analyzer
      
      # Run Slither analysis
      - name: Run Slither Analysis
        run: slither . --json slither-report.json
      
      # Upload Slither results as an artifact
      - name: Upload Slither Report
        uses: actions/upload-artifact@v3
        with:
          name: slither-report
          path: slither-report.json
          
      # Optional: Comment results on PR
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            try {
              const slitherReport = JSON.parse(fs.readFileSync('slither-report.json', 'utf8'));
              
              // Count different types of findings
              const detectors = slitherReport.results.detectors || [];
              const highIssues = detectors.filter(d => d.impact === 'High').length;
              const mediumIssues = detectors.filter(d => d.impact === 'Medium').length;
              const lowIssues = detectors.filter(d => d.impact === 'Low').length;
              
              const body = `## Slither Security Analysis
              
              - ðŸ”´ High severity issues: ${highIssues}
              - ðŸŸ  Medium severity issues: ${mediumIssues}
              - ðŸŸ¡ Low severity issues: ${lowIssues}
              
              [View full report in the action artifacts](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body
              });
            } catch (error) {
              console.log('Error creating comment:', error);
            }
